function _classCallCheck (e, r) { if (!(e instanceof r)) { throw new TypeError('Cannot call a class as a function') } } const _createClass = (function () { function e (e, r) { for (let o = 0; o < r.length; o++) { const t = r[o]; t.enumerable = t.enumerable || !1, t.configurable = !0, 'value' in t && (t.writable = !0), Object.defineProperty(e, t.key, t) } } return function (r, o, t) { return o && e(r.prototype, o), t && e(r, t), r } }()); typeof Object.assign !== 'function' && Object.defineProperty(Object, 'assign', { value (e, r) { 'use strict'; if (e == null) { throw new TypeError('Cannot convert undefined or null to object') } for (var o = Object(e), t = 1; t < arguments.length; t++) { const c = arguments[t]; if (c != null) { for (const a in c) { Object.prototype.hasOwnProperty.call(c, a) && (o[a] = c[a]) } } } return o }, writable: !0, configurable: !0 }), Object.entries || (Object.entries = function (e) { for (var r = Object.keys(e), o = r.length, t = new Array(o); o--;) { t[o] = [r[o], e[r[o]]] } return t }), Array.from || (Array.from = (function () { const e = Object.prototype.toString; const r = function (r) { return typeof r === 'function' || e.call(r) === '[object Function]' }; const o = function (e) { const r = Number(e); return isNaN(r) ? 0 : r !== 0 && isFinite(r) ? (r > 0 ? 1 : -1) * Math.floor(Math.abs(r)) : r }; const t = 2 ** 53 - 1; const c = function (e) { const r = o(e); return Math.min(Math.max(r, 0), t) }; return function (e) { const o = this; const t = Object(e); if (e == null) { throw new TypeError('Array.from requires an array-like object - not null or undefined') } let a; const n = arguments.length > 1 ? arguments[1] : void 0; if (void 0 !== n) { if (!r(n)) { throw new TypeError('Array.from: when provided, the second argument must be a function') } arguments.length > 2 && (a = arguments[2]) } for (var i, p = c(t.length), s = r(o) ? Object(new o(p)) : new Array(p), l = 0; l < p;) { i = t[l], s[l] = n ? void 0 === a ? n(i, l) : n.call(a, i, l) : i, l += 1 } return s.length = p, s } }())), window.NodeList && !NodeList.prototype.forEach && (NodeList.prototype.forEach = function (e, r) { r = r || window; for (let o = 0; o < this.length; o++) { e.call(r, this[o], o, this) } }); const CcmLog = (function () { function e () { _classCallCheck(this, e) } return _createClass(e, null, [{ key: 'log', value (e) { let r = !0; if (void 0 !== ccmWrapper.config.log.log && (r = ccmWrapper.config.log.log), r) { try { for (var o = arguments.length, t = Array(o > 1 ? o - 1 : 0), c = 1; c < o; c++) { t[c - 1] = arguments[c] } if (t.length > 0) { let a; (a = console).log.apply(a, [e].concat(t)) } else { console.log(e) } } catch (e) {} } } }, { key: 'info', value (r) { let o = !0; if (void 0 !== ccmWrapper.config.log.info && (o = ccmWrapper.config.log.info), o) { for (var t = arguments.length, c = Array(t > 1 ? t - 1 : 0), a = 1; a < t; a++) { c[a - 1] = arguments[a] } try { if (c.length > 0) { let n; (n = console).info.apply(n, [r].concat(c)) } else { console.info(r) } } catch (o) { e.error(o), e.log.apply(e, [r].concat(c)) } } } }, { key: 'debug', value (r) { let o = !0; if (void 0 !== ccmWrapper.config.log.debug && (o = ccmWrapper.config.log.debug), o) { for (var t = arguments.length, c = Array(t > 1 ? t - 1 : 0), a = 1; a < t; a++) { c[a - 1] = arguments[a] } try { if (c.length > 0) { let n; (n = console).debug.apply(n, [r].concat(c)) } else { console.debug(r) } } catch (o) { e.error(o), e.log.apply(e, [r].concat(c)) } } } }, { key: 'warning', value (r) { let o = !0; if (void 0 !== ccmWrapper.config.log.warning && (o = ccmWrapper.config.log.warning), o) { for (var t = arguments.length, c = Array(t > 1 ? t - 1 : 0), a = 1; a < t; a++) { c[a - 1] = arguments[a] } try { if (c.length > 0) { let n; (n = console).warn.apply(n, [r].concat(c)) } else { console.warn(r) } } catch (o) { e.error(o), e.log.apply(e, [r].concat(c)) } } } }, { key: 'error', value (r) { let o = !0; if (void 0 !== ccmWrapper.config.log.error && (o = ccmWrapper.config.log.error), o) { for (var t = arguments.length, c = Array(t > 1 ? t - 1 : 0), a = 1; a < t; a++) { c[a - 1] = arguments[a] } try { if (c.length > 0) { let n; (n = console).error.apply(n, [r].concat(c)) } else { console.error(r) } } catch (o) { e.error(o), e.log.apply(e, [r].concat(c)) } } } }]), e }()); const CcmCookie = (function () { function e (r) { _classCallCheck(this, e), this.isSet = !1, this.name = r, this.value = null, this.domain = ccmWrapper.config.cookieDomain, this.path = ccmWrapper.config.cookiePath, this.expires = new Date(), this.expires.setTime(this.expires.getTime() + 31536e6), this.read() } return _createClass(e, [{ key: 'read', value () { const e = document.cookie.match('(^|;) ?' + this.name + '=([^;]*)(;|$)'); e && (this.value = e[2], this.isSet = !0, CcmLog.debug('Loaded cookie: ' + this.name, this, document.cookie)) } }, { key: 'store', value () { const e = [this.name + '=' + this.value, 'expires=' + this.expires.toUTCString()]; this.domain && e.push('domain=' + this.domain), this.path && e.push('path=' + this.path), document.cookie = e.join(';'), this.isSet ? CcmLog.debug('Stored cookie: ' + this.name, this, document.cookie) : CcmLog.debug('Created cookie: ' + this.name, this, document.cookie), this.isSet = !0 } }, { key: 'delete', value () { this.isSet && (this.value = null, this.expires = new Date(0), this.store(), this.isSet = !1, CcmLog.debug('Deleted cookie: ' + this.name, document.cookie)) } }]), e }()); const Wrapper = (function () { function e () { _classCallCheck(this, e), this.config = { log: { log: !1, info: !1, debug: !1, warning: !1, error: !1 }, organisation: 'EO', site: 'nietalleen.nl', cookieDomain: '.nietalleen.nl', cookiePath: '/', wrapperCacheCookieName: 'CCM_Wrapper_Cache', assetsBaseUrl: 'https://cookies.nietalleen.nl', ccmSettingsBaseUrl: 'https://cookies.nietalleen.nl', ccmScript: 'ccm_', ccmAutoLoad: !0, XMLHttpRequestTimeout: 8e3, executed: !1 }, this.dispatchEvent('CCM_Wrapper_loaded') } return _createClass(e, [{ key: 'preprocess', value () { document.readyState === 'complete' || document.readyState === 'loaded' || document.readyState === 'interactive' ? ccmWrapper.dispatchEvent('CCM_Wrapper_ready') : document.onreadystatechange = function () { document.readyState !== 'complete' && document.readyState !== 'loaded' && document.readyState !== 'interactive' || ccmWrapper.dispatchEvent('CCM_Wrapper_ready') } } }, { key: 'init', value (e) { if (ccmWrapper.config.executed) { return !1 } if (ccmWrapper.config.executed = !0, CcmLog.info('Running init()'), e && (CcmLog.debug('Init contains an overruling config', e), ccmWrapper.config = Object.assign(ccmWrapper.config, e), CcmLog.debug('New wrapper config', ccmWrapper.config)), ccmWrapper.WrapperCacheCookie = new CcmCookie(ccmWrapper.config.wrapperCacheCookieName), ccmWrapper.WrapperCacheCookie.isSet) { CcmLog.info('Loading existing CCM Wrapper cache cookie'), ccmWrapper.processWrapperData(), ccmWrapper.loadCCM() } else { CcmLog.info('Getting wrapper version data'); const r = XMLHttpRequest ? new XMLHttpRequest() : new ActiveXObject('Microsoft.XMLHTTP'); r.open('GET', ccmWrapper.config.assetsBaseUrl + '/sites/' + ccmWrapper.config.organisation + '/' + ccmWrapper.config.site + '/version.txt', !0), r.timeout = ccmWrapper.config.XMLHttpRequestTimeout, r.onreadystatechange = function () { if (CcmLog.debug('XHR ready state changed', r), r.readyState == 4) { if (r.status != 200) { throw CcmLog.error('Received HTTP status code ' + r.status + ' on requesting CCM Wrapper data', r), 'exit' } CcmLog.debug('Fetched wrapper data', r.responseText), ccmWrapper.WrapperCacheCookie.value = btoa(r.responseText), ccmWrapper.WrapperCacheCookie.domain = ccmWrapper.config.cookieDomain, ccmWrapper.WrapperCacheCookie.path = ccmWrapper.config.cookiePath, ccmWrapper.WrapperCacheCookie.expires = new Date(), ccmWrapper.WrapperCacheCookie.expires.setTime(ccmWrapper.WrapperCacheCookie.expires.getTime() + 36e5), ccmWrapper.WrapperCacheCookie.store(), ccmWrapper.processWrapperData(JSON.parse(r.responseText)), ccmWrapper.loadCCM() } }, r.onerror = function (e) { throw CcmLog.error('Error on requesting CCM Wrapper data', e), 'exit' }, r.ontimeout = function (e) { throw CcmLog.error('Timeout on requesting CCM Wrapper data', e), 'exit' }, r.send() }ccmWrapper.config.ccmAutoLoad && window.addEventListener('CCM_ready', function (e) { CcmLog.info('Autoloading CCM'), ccm.init() }, !1) } }, { key: 'processWrapperData', value (e) { if (!e) { try { e = JSON.parse(atob(ccmWrapper.WrapperCacheCookie.value)) } catch (e) { throw CcmLog.error('Could not load cached wrapper data', ccmWrapper.WrapperCacheCookie.value, atob(ccmWrapper.WrapperCacheCookie.value)), ccmWrapper.WrapperCacheCookie.delete(), 'exit' } }CcmLog.log('CCM Wrapper cache', e), ccmWrapper.version = e.ver, ccmWrapper.jsHash = e.jsh, ccmWrapper.cookieId = e.cid, ccmWrapper.contentId = e.conid } }, { key: 'loadCCM', value () { const e = ccmWrapper.createScript(ccmWrapper.config.assetsBaseUrl + '/sites/' + ccmWrapper.config.organisation + '/' + ccmWrapper.config.site + '/' + ccmWrapper.config.ccmScript + ccmWrapper.version + '-' + ccmWrapper.contentId + '.js'); const r = document.getElementsByTagName('script')[0]; r.parentNode.insertBefore(e, r), ccmWrapper.dispatchEvent('CCM_Wrapper_done') } }, { key: 'dispatchEvent', value (e) { try { let r = void 0; typeof window.CustomEvent === 'function' ? r = new Event(e) : (r = document.createEvent('HTMLEvents'), r.initEvent(e, !1, !0)), window.dispatchEvent(r) } catch (e) { CcmLog.error(e) } } }, { key: 'createScript', value (e, r, o) { const t = document.createElement('script'); return t.src = e, t.crossOrigin = 'anonymous', o && (t.integrity = o), r && (t.async = r, t.defer = r), t } }, { key: 'createStyle', value (e, r, o) { const t = document.createElement('link'); return t.rel = 'stylesheet', t.href = e, t.crossOrigin = 'anonymous', o && (t.integrity = o), r && (t.async = r, t.defer = r), t } }]), e }()); let ccmWrapper; ccmWrapper = new Wrapper(), CcmLog.debug('Wrapper config', ccmWrapper.config), ccmWrapper.preprocess()
